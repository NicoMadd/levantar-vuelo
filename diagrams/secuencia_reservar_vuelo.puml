@startuml Secuencia Reservar Vuelo

actor Usuario
participant Usuario.Interface.Worker
participant Reservas.Worker
participant Vuelos.Worker
database Reservas.DB


Usuario -> Usuario.Interface.Worker: Iniciar reserva de un vuelo
Usuario.Interface.Worker -> Reservas.Worker: Iniciar reserva \n usuario + vuelo
Reservas.Worker -> Reservas.DB: Crear reserva inicial \n usuario + vuelo
Reservas.Worker <-- Reservas.DB: ID Reserva
Reservas.Worker --> Usuario.Interface.Worker: ID Reserva
Usuario.Interface.Worker --> Usuario: Reserva iniciada


newpage

Usuario -> Usuario.Interface.Worker: Reservar vuelo \n reserva_id + asientos
Usuario.Interface.Worker -> Reservas.Worker: Publicar vuelo \n reserva_id + asientos
Reservas.Worker -> Vuelos.Worker: Validar vuelo \n vuelo
activate Reservas.Worker 
Reservas.Worker <-- Vuelos.Worker: Vuelo valido
Reservas.Worker -> Vuelos.Worker: Validar asientos \n vuelo + asientos
Reservas.Worker <-- Vuelos.Worker: Asientos validos
Reservas.Worker -> Vuelos.Worker: Asignar asientos \n vuelo + asientos
Reservas.Worker <-- Vuelos.Worker: Asientos asignados
Reservas.Worker -> Reservas.DB: Confirmar reserva
Reservas.Worker <-- Reservas.DB: Reserva confirmada \n OK
Reservas.Worker --> Usuario.Interface.Worker: Reserva confirmada
deactivate Reservas.Worker 
Usuario.Interface.Worker --> Usuario: Reserva confirmada 


@enduml
